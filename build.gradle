plugins {
    id 'java'
    id 'maven-publish'
    id 'me.champeau.gradle.jmh' version '0.5.0'
    id 'net.researchgate.release' version '2.8.1'
    id 'com.jfrog.bintray' version '1.8.4'
}

group 'me.k11i'
version '1.0-SNAPSHOT'

sourceCompatibility = 11

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'com.google.guava', name: 'guava', version: '28.2-jre'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.4.2'
}

test {
    useJUnitPlatform()

    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }

    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\nTest result: ${result.resultType}"
            println "Test summary: ${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped"
        }
    }
}

jmh {
    timeUnit = 'ms'
    resultFormat = 'CSV'
}

javadoc {
    options.locale = 'en_US'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

release {
    preTagCommitMessage = '[skip ci] [Gradle Release Plugin] - pre tag commit: '
    newVersionCommitMessage = '[skip ci] [Gradle Release Plugin] - new version commit: '

    git {
        requireBranch = 'master'
    }
}

afterReleaseBuild.dependsOn(bintrayUpload)

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['mavenJava']

    pkg {
        repo = 'maven'
        name = 'xor-filter'
        userOrg = 'komiya-atsushi'
        licenses = ['MIT']

        websiteUrl = 'https://github.com/komiya-atsushi/xor-filter'
        issueTrackerUrl = 'https://github.com/komiya-atsushi/xor-filter/issues'
        vcsUrl = 'https://github.com/komiya-atsushi/xor-filter.git'

        version {
            name = project.version
            desc = 'Yet another Java implementation of the Xor Filters'
        }
    }
}
